#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), "..", "lib")
require "sgp4"

def output_line(t, ephemeris)
  ephemeris.calculate(t)
  printf " %16.8f %16.8f %16.8f %16.8f %12.9f %12.9f %12.9f\n",
    t, ephemeris.pos.x, ephemeris.pos.y, ephemeris.pos.z,
    ephemeris.vel.x, ephemeris.vel.y, ephemeris.vel.z
  # puts "#{t} #{ephemeris.pos} #{ephemeris.vel}"
end

def output(tle_array, start_time, end_time, delta)
  # puts tle_array
  ephemeris = Sgp4::Sgp4.new(tle_array)
  puts "#{ephemeris.tle.norad_number} xx"
  output_line(0.0, ephemeris) unless start_time.abs <= 1e-8

  loop do
    output_line([start_time, end_time].min, ephemeris)
    break if start_time >= end_time
    start_time += delta
  end
rescue RuntimeError => e
  puts e
end

tle_array = []
ARGF.each_with_index do |line, _x|
  next if line =~ /^\s*#/
  tle_array = [line] if line[0] == "1"
  next unless line[0] == "2"
  tle_array << line[0, 69]
  # puts line[69..-1]
  start_time, end_time, delta = line[69..-1].split(" ").map(&:to_f)
  # puts "#{start_time}, #{end_time}, #{delta}"
  output(tle_array, start_time, end_time, delta)
end
